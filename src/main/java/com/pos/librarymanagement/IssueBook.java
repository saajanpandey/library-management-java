/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.pos.librarymanagement;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Date;
import javax.swing.JOptionPane;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author saajan
 */
public class IssueBook extends javax.swing.JFrame {

    /**
     * Creates new form IssueBook
     */
    public IssueBook() {
        initComponents();
        bookIsbn.setEditable(false);
        copiesText.setEditable(false);
        editionText.setEditable(false);
        authorText.setEditable(false);
        publisherText.setEditable(false);
        firstNameText.setEditable(false);
        lastNameText.setEditable(false);
        studentIDText.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bookJpanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        searchTextField = new javax.swing.JTextField();
        bookIsbn = new javax.swing.JTextField();
        copiesText = new javax.swing.JTextField();
        editionText = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        publisherText = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        authorText = new javax.swing.JTextField();
        bookTitle = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        studentSearchText = new javax.swing.JTextField();
        studentSearch = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        studentIDText = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        firstNameText = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        lastNameText = new javax.swing.JTextField();
        issueDate = new com.github.lgooddatepicker.components.DatePicker();
        issueBookBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Issue Books");
        setResizable(false);

        bookJpanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Book", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));

        jLabel1.setText("Search");

        jLabel2.setText("Book Title");

        jLabel3.setText("Copies Owned");

        jLabel4.setText("Edition");

        jLabel5.setText("Publisher");

        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        jLabel6.setText("Author");

        jLabel11.setText("ISBN");

        javax.swing.GroupLayout bookJpanelLayout = new javax.swing.GroupLayout(bookJpanel);
        bookJpanel.setLayout(bookJpanelLayout);
        bookJpanelLayout.setHorizontalGroup(
            bookJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookJpanelLayout.createSequentialGroup()
                .addGroup(bookJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bookJpanelLayout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addGroup(bookJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6)
                            .addComponent(jLabel11)))
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(40, 40, 40)
                .addGroup(bookJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                    .addComponent(bookIsbn)
                    .addComponent(copiesText)
                    .addComponent(publisherText)
                    .addComponent(editionText)
                    .addComponent(authorText)
                    .addComponent(bookTitle, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addComponent(searchBtn)
                .addGap(19, 19, 19))
        );
        bookJpanelLayout.setVerticalGroup(
            bookJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookJpanelLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(bookJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn))
                .addGap(18, 18, 18)
                .addGroup(bookJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bookIsbn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(27, 27, 27)
                .addGroup(bookJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bookTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(29, 29, 29)
                .addGroup(bookJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(copiesText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(bookJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(authorText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(29, 29, 29)
                .addGroup(bookJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(publisherText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(30, 30, 30)
                .addGroup(bookJpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editionText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(46, 46, 46))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Student", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));

        jLabel7.setText("Search");

        studentSearch.setText("Search");
        studentSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentSearchActionPerformed(evt);
            }
        });

        jLabel8.setText("ID");

        jLabel9.setText("First Name");

        jLabel10.setText("Last Name");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)))
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(40, 40, 40)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(studentSearchText, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                    .addComponent(studentIDText)
                    .addComponent(firstNameText)
                    .addComponent(lastNameText))
                .addGap(18, 18, 18)
                .addComponent(studentSearch)
                .addGap(19, 19, 19))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(studentSearchText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(studentSearch))
                .addGap(38, 38, 38)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(studentIDText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(firstNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(lastNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(197, Short.MAX_VALUE))
        );

        issueBookBtn.setText("Issue Book");
        issueBookBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                issueBookBtnActionPerformed(evt);
            }
        });

        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(bookJpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(issueDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(issueBookBtn)
                        .addGap(18, 18, 18)
                        .addComponent(backBtn)))
                .addGap(16, 16, 16))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bookJpanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(issueDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(issueBookBtn)
                    .addComponent(backBtn))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
        try (Connection con = SqlConnect.connect()) {

            PreparedStatement ps = con.prepareStatement("SELECT books.isbn, books.name, authors.name,publishers.name, books.published_year, books.copies_owned,books.edition,books.price,books.date_purchased FROM books "
                    + "JOIN authors ON authors.id = books.author_id JOIN publishers ON publishers.id = books.publisher_id WHERE books.isbn=? ");

            ps.setString(1, searchTextField.getText());
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                bookIsbn.setText(rs.getString("books.isbn"));
                bookTitle.setText(rs.getString("books.name"));
                copiesText.setText(rs.getString("books.copies_owned"));
                editionText.setText(rs.getString("books.edition"));
                authorText.setText(rs.getString("authors.name"));
                publisherText.setText(rs.getString("publishers.name"));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Book not found", "Alert", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void studentSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentSearchActionPerformed
        // TODO add your handling code here:
        try (Connection con = SqlConnect.connect()) {

            PreparedStatement ps = con.prepareStatement("SELECT id,first_name, last_name from users WHERE role='user' and id=?");

            ps.setString(1, studentSearchText.getText());
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                studentIDText.setText(rs.getString("id"));
                firstNameText.setText(rs.getString("first_name"));
                lastNameText.setText(rs.getString("last_name"));

            }
        } catch (Exception e) {
            System.out.print(e.getMessage());
            JOptionPane.showMessageDialog(null, "Student Not Found", "Alert", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_studentSearchActionPerformed

    private void issueBookBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_issueBookBtnActionPerformed
        // TODO add your handling code here:

        if (validInput()) {

            String studentID = studentIDText.getText();
            String bookID = bookIsbn.getText();

            try {
                SimpleDateFormat inputFormat = new SimpleDateFormat("MMMM dd, yyyy");
                SimpleDateFormat outputFormat = new SimpleDateFormat("yyyy-MM-dd");

                Date date = inputFormat.parse(issueDate.getText());
                String formattedDate = outputFormat.format(date);

                LocalDate today = LocalDate.now();

                final DateTimeFormatter dtfymd
                        = DateTimeFormatter.ofPattern("yyyy-MM-dd");

                LocalDate date1;
                date1 = LocalDate.parse(formattedDate, dtfymd);

                if (date1.isAfter(today)) {
                    JOptionPane.showMessageDialog(null, "Book cannot be issued", "Error Message", JOptionPane.WARNING_MESSAGE);
                    return;
                }

                try (Connection con = SqlConnect.connect()) {

                    PreparedStatement psCheck = con.prepareStatement("Select count from book_count where book_id=? ");
                    psCheck.setString(1, bookID);
                    ResultSet rsCheck = psCheck.executeQuery();
                    rsCheck.next();
                    String patCheck = rsCheck.getString("count");
                    int countCheck = Integer.parseInt(patCheck);

                    if (countCheck > 0) {

                        PreparedStatement smt
                                = con.prepareStatement("INSERT INTO `book_issues`(`user_id`, `book_id`, `date`) VALUES (?,?,?)");

                        smt.setString(1, studentID);
                        smt.setString(2, bookID);
                        smt.setString(3, formattedDate);
                        smt.executeUpdate();
                        issueDate.setText("");
                        studentIDText.setText("");
                        bookIsbn.setText("");
                        bookTitle.setText("");
                        copiesText.setText("");
                        editionText.setText("");
                        authorText.setText("");
                        lastNameText.setText("");
                        publisherText.setText("");
                        searchTextField.setText("");
                        studentIDText.setText("");
                        studentSearchText.setText("");
                        firstNameText.setText("");

                        PreparedStatement ps = con.prepareStatement("Select count from book_count where book_id=? ");
                        ps.setString(1, bookID);
                        ResultSet rs = ps.executeQuery();
                        rs.next();
                        String pat = rs.getString("count");
                        int previousCount = Integer.parseInt(pat);
                        int newCount = previousCount - 1;

                        PreparedStatement psInsert = con.prepareStatement("UPDATE book_count Set count=? WHERE book_id = ? ");
                        psInsert.setInt(1, newCount);
                        psInsert.setString(2, bookID);
                        psInsert.executeUpdate();

                        con.close();

                        JOptionPane.showMessageDialog(null, "Book Issued");
                    } else {
                        JOptionPane.showMessageDialog(null, "There is no book in the library to issue!");
                    }

                }
            } catch (SQLException | ParseException e) {

                JOptionPane.showMessageDialog(null, "Book cannot be issued", "Error Message", JOptionPane.WARNING_MESSAGE);
            }

        }

    }//GEN-LAST:event_issueBookBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_backBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IssueBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IssueBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IssueBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IssueBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IssueBook().setVisible(true);
            }
        });
    }

    public boolean validInput() {
        if (studentIDText.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Student Id is required.");
            studentIDText.requestFocus();
            return false;

        } else if (bookIsbn.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Book ISBN is required.");
            return false;
        }
        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField authorText;
    private javax.swing.JButton backBtn;
    private javax.swing.JTextField bookIsbn;
    private javax.swing.JPanel bookJpanel;
    private javax.swing.JTextField bookTitle;
    private javax.swing.JTextField copiesText;
    private javax.swing.JTextField editionText;
    private javax.swing.JTextField firstNameText;
    private javax.swing.JButton issueBookBtn;
    private com.github.lgooddatepicker.components.DatePicker issueDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField lastNameText;
    private javax.swing.JTextField publisherText;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JTextField studentIDText;
    private javax.swing.JButton studentSearch;
    private javax.swing.JTextField studentSearchText;
    // End of variables declaration//GEN-END:variables
}
